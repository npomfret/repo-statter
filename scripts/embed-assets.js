#!/usr/bin/env node
import { readFileSync, writeFileSync, readdirSync } from 'fs'
import { join, dirname, basename } from 'path'
import { fileURLToPath } from 'url'

const __filename = fileURLToPath(import.meta.url)
const __dirname = dirname(__filename)

// Embed template
const templatePath = join(__dirname, '../src/report/template.html')
const template = readFileSync(templatePath, 'utf-8')
const escapedTemplate = template
  .replace(/\\/g, '\\\\')
  .replace(/`/g, '\\`')
  .replace(/\$/g, '\\$')

// Embed SVGs
const imagesDir = join(__dirname, '../src/images')
const svgFiles = readdirSync(imagesDir).filter(f => f.endsWith('.svg'))

const svgImports = svgFiles.map(file => {
  const content = readFileSync(join(imagesDir, file), 'utf-8')
  const escaped = content
    .replace(/\\/g, '\\\\')
    .replace(/`/g, '\\`')
    .replace(/\$/g, '\\$')
  const varName = file.replace('.svg', '').replace(/-/g, '_').toUpperCase() + '_SVG'
  return `export const ${varName} = \`${escaped}\``
}).join('\n\n')

const output = `// This file is auto-generated by scripts/embed-assets.js
export const TEMPLATE_HTML = \`${escapedTemplate}\`

${svgImports}
`

const outputPath = join(__dirname, '../src/report/embedded-assets.ts')
writeFileSync(outputPath, output)
console.log('Assets embedded successfully')